import { createSlice } from '@reduxjs/toolkit';

import { getPost, getPosts } from 'store/posts/thunk';
import { IPost } from 'types/blog';

interface PostsState {
  posts: IPost[];
  loading: boolean;
  error: string;
  lastPage: number | null;
  currentPost: IPost | null;
  postLoading: boolean;
  postError: string;
}

const initialState: PostsState = {
  posts: [],
  lastPage: null,
  loading: false,
  error: '',
  currentPost: null,
  postLoading: false,
  postError: '',
};

const postsSlice = createSlice({
  name: 'posts',
  initialState,
  reducers: {},
  extraReducers: (builder) => {
    builder
      .addCase(getPosts.pending, (state, action) => {
        if (action.meta.arg === 1) {
          state.posts = [];
        }
        state.loading = true;
        state.error = '';
      })
      .addCase(getPosts.fulfilled, (state, action) => {
        state.loading = false;
        state.posts = [...state.posts, ...action.payload.data];
        state.lastPage = action.payload.pagination.lastPage;
      })
      .addCase(getPosts.rejected, (state, action) => {
        state.loading = false;
        // state.posts = [];
        state.posts = [
          {
            code: 'fools_day2024',
            header: '–í—Å–µ–º—É —Ö–æ—Ä–æ—à–µ–º—É –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–æ–Ω–µ—Ü',
            text: '<p>–ö–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ –∫–æ–≥–¥–∞-—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Ä–µ–º—è –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.</p>\n<p><img src="https://rdga.ru/files/cherkasik/tired.webp" alt="" loading="lazy"></p>\n<p>–î–ª—è –∫–æ–≥–æ-—Ç–æ —ç—Ç–æ —Å–º–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞, –¥–ª—è –∫–æ–≥–æ-—Ç–æ –Ω–æ–≤—ã–π –¥–∏—Å–∫, —Å–º–µ–Ω–∞ –ø—Ä–∏—á–µ—Å–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–µ–∑–¥ –≤ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω—É. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º–æ–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∂–µ–ª–∞–Ω–∏–µ —Å–∫–∞–∑–∞–ª–æ, —á—Ç–æ –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.<br>–ß–µ—Ä–µ–∑ –ø–∞—Ä—É –¥–Ω–µ–π —è –æ—Ç–∫–ª—é—á—É —Å–∞–π—Ç, –≤—Å–µ–º —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –æ—Ç–∑—ã–≤—ã, –∫–∞–∫–∏–º–∏ –±—ã –æ–Ω–∏ –Ω–∏ –±—ã–ª–∏‚ù§Ô∏è<br><br></p>\n<h3>–ß—Ç–æ, –ø–æ–≤–µ—Ä–∏–ª–∏?) –° 1 –∞–ø—Ä–µ–ª—è, –¥—É—Ä–∞—à–∫–∏üòÖ<br><img src="https://rdga.ru/files/cherkasik/clown.webp" alt="" loading="lazy"></h3>',
            author: '–°–æ–∑–¥–∞—Ç–µ–ª—å',
            createdAt: '2024-04-01T08:42:30.431Z',
            authorRdgaNumber: 24,
            authorName: '–ò–ª—å—è',
            authorSurname: '–ß–µ—Ä–∫–∞—Å–æ–≤',
            authorAvatarUrl:
              'https://t.me/i/userpic/320/sj36KIyWNmxgjXt4QEGzPK4WOQS0YNz9hpNDh-Gorv0.jpg',
          },
          {
            code: 'fools_day2024_2',
            header: '–í—Å–µ–º—É —Ö–æ—Ä–æ—à–µ–º—É –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–æ–Ω–µ—Ü',
            text: '<p>–ö–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ –∫–æ–≥–¥–∞-—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Ä–µ–º—è –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.</p>\n<p>–î–ª—è –∫–æ–≥–æ-—Ç–æ —ç—Ç–æ —Å–º–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞, –¥–ª—è –∫–æ–≥–æ-—Ç–æ –Ω–æ–≤—ã–π –¥–∏—Å–∫, —Å–º–µ–Ω–∞ –ø—Ä–∏—á–µ—Å–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–µ–∑–¥ –≤ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω—É. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º–æ–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∂–µ–ª–∞–Ω–∏–µ —Å–∫–∞–∑–∞–ª–æ, —á—Ç–æ –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.<br>–ß–µ—Ä–µ–∑ –ø–∞—Ä—É –¥–Ω–µ–π —è –æ—Ç–∫–ª—é—á—É —Å–∞–π—Ç, –≤—Å–µ–º —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –æ—Ç–∑—ã–≤—ã, –∫–∞–∫–∏–º–∏ –±—ã –æ–Ω–∏ –Ω–∏ –±—ã–ª–∏‚ù§Ô∏è<br><br></p>\n<h3>–ß—Ç–æ, –ø–æ–≤–µ—Ä–∏–ª–∏?) –° 1 –∞–ø—Ä–µ–ª—è, –¥—É—Ä–∞—à–∫–∏üòÖ<br></h3>',
            author: '–°–æ–∑–¥–∞—Ç–µ–ª—å',
            createdAt: '2024-04-01T08:42:30.431Z',
            authorRdgaNumber: 24,
            authorName: '–ò–ª—å—è',
            authorSurname: '–ß–µ—Ä–∫–∞—Å–æ–≤',
            authorAvatarUrl:
              'https://t.me/i/userpic/320/sj36KIyWNmxgjXt4QEGzPK4WOQS0YNz9hpNDh-Gorv0.jpg',
          },
        ];
        state.error = action.error.message ?? '';
      })
      .addCase(getPost.pending, (state) => {
        state.postLoading = true;
        state.postError = '';
        state.currentPost = null;
      })
      .addCase(getPost.fulfilled, (state, action) => {
        state.postLoading = false;
        state.currentPost = action.payload;
      })
      .addCase(getPost.rejected, (state, action) => {
        state.postLoading = false;
        state.currentPost = null;
        state.postError = action.error.message ?? '';
      });
  },
});

export default postsSlice.reducer;
